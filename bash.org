* Bash y bashscripts

** Explicaciones del bash en Slackware
   http://docs.slackware.com/slackbook:bash?s[]=bashrc

   http://docs.slackware.com/howtos:cli_manual:shells?s[]=bashrc

** Aliases y Configuraciones
   cuando se entra desde un terminal en X el bash ejecuta .bashrc
   cuando entra por consola ejecuta .bash_login

   entonces dentro de .bash_login coloco:
   source .bashrc

   entonces tanto desde consola como desde terminal, tengo los aliases y configuraciones requeridas

** Incluir programas para busqueda en el PATH
   ##incluir programas dentro del PATH
   ##para hacerlo permanente -> add this line to ~/.bashrc (you use PATH rather then CONFIG_PATH)
   export PATH=$PATH:/path/to_directory_containing_program

   ##para verlo
   echo $PATH

** Buscar Archivo recursivo con los detalles de cada archivo
   find -name hard.h |xargs ls -alFt

** BUSQUEDA POR TEXTO DENTRO DEL ARCHIVO
   grep -lir "main.py" * //busca una linea main.py dentro de archivos con nombre *
   grep -i	//ignore case
   grep -r	//recursive desde el directorio

** Comandos de MEMORIA
   free -mt
   cat /proc/meminfo

** Comandos para MANTENIMIENTO
   who
   last
   finger
   ls -lah
   pwd
   whoami
   du -h
   df -h
   free -h
   history
   cat /var/log/#archivos_log
   netstat
   which [nombreprog]
   file [nombrearch]
   file $(which [nombreprog])

*** Archivos Log
   tail -n 200 /var/log/messages
   tail -n 200 /var/log/syslog

** Symbolic Links   
   To create a new symlink (will fail if symlink exists already):
   ln -s /path/to/file /path/to/symlink
   
   To create or update a symlink:
   ln -sf /path/to/file /path/to/symlink

   crear link ejemplo
   ln -s ~/tmp/sdcc/device/include/pic14/pic16regs.h pic16regs.h

** BashScript
*** Comenzar el archivo script con 
    #!/bin/bash

*** Links
    http://mywiki.wooledge.org/BashGuide/CommandsAndArguments

** AWK BashScripts
*** Imprimir lineas salteadas desde un archivo
    - awk '(NR-1)%5<3' file
    - NR numero de linea

    - awk '{if((NR-1) % 5<=2){print $0}}' file
    - It will only print first 3 lines in sequence of 5 lines. 
    Because (NR-1)%5 will give output like 0 1 2 3 4, and first 3 lines 
    are less than equal to 2. So it will only print them.

** Imprimir algunas lineas de un archivo
*** con awk como mas arriba
*** head si es la primera linea
    head -1 file.txt

*** sed para lineas salteadas
    - imprimir solo la primera linea, -n quita salida default (todas las lineas)
      sed -n 1p file.txt

    - To extract a range of lines, say lines 2 to 4, you can execute either of the following:
    $ sed -n 2,4p somefile.txt
    $ sed '2,4!d' somefile.txt

    - Note that the comma specifies a range (from the line before the comma to the line after).
    What if the lines you want to extract are not in sequence, say lines 1 to 2, and line 4?
    $ sed -n -e 1,2p -e 4p somefile.txt

*** Numeros de lineas en un archivo
    grep -n ESSID scan.txt |awk -F: '{print $1}'

    grep -n ESSID scan.txt |sed -n 's/^\([0-9]*\)[:].*/\1/p'

    The -n means not to print anything unless it's explicitly requested. 
    s - substitute
    / - beginning of patter to match
    ^ - The null character at the start of the line
    \(....\) - store this in the pattern buffer
    [0-9]* - match any number of occurrences numbers in the range 0-9
    [:] - match the ":" character
    .* - match any number of any characters (the rest of the line)
    / - end on the match patter and beginning on the replace pattern
    \1 - the first entry in the pattern buffer ( what was stored with \(...\) )
    / - end of the replace pattern
    p - print

*** Enteros en Bash
    In bash, one does not "convert an argument to an integer to perform arithmetic".
    In bash, variables are treated as integer or string depending on context.
    To perform arithmetic, you should invoke the arithmetic expansion operator $((...)).
    For example:

    $ a=2
    $ echo "$a + 1"
    2 + 1
    $ echo "$((a + 1))"
    3

** Comandos: pushd popd
   - para cambiar de directorio al que despues quiero volver
     pushp /home/med    #me lleva al directorio /home/med guardando el actual
     popd               #me lleva al directorio guardado
** Comando: env export
   - env     # me muestra todos los valores de las variables que conoce
   - export CFLAGS='-g -Wall'    # setea el valor de la variable
   - echo $USER    # me muestra el valor de una variable especial
** PDF Merge
   gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf D100W_VER1,0_MICRO_TOP.pdf D100W_VER1,0_MICRO_BOT.pdf D100W_VER1,0_MICRO_SCH.pdf

   gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf file1.pdf file2.pdf file_end.pdf

* Comandos de Networking
** ping a todo un segmento
   cortar con CTRL-c un monton de veces (1 por loop)
   for i in $(seq 1 254); do ping -c1 -t 1 192.168.11.$i; done
   
   
** todas las ip conocidas
   arp -a

** Conexion remota
   ssh pi@192.168.1.100

   ip / port
   ssh pi@192.168.1.35 22
** Enviar un paquete UDP
   - desde la linea de comando
     echo -n "hello" >/dev/udp/localhost/6454

   - con netcat
     echo -n "hello" | nc -4u -q1 localhost 8000
* Ver archivos Binarios
** Para archivos .bin usar hexdump
   hexdump file.bin
   hexdump -C file.bin

** Checksum de archivos binarios
   - 0xFF - (sum of all bytes without carry, mod8())
     cksum
