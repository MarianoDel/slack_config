* #### USO DE EMACS #### 
** Basico
   C-g      //quit current command
   C-x z    //repite ultimo comando

** Funcionalidad de Archivos
   C-x C-f 	  //busca y abre archivo o crea uno nuevo
   C-x C-s	  //guarda el archivo actual del buffer
   C-x s	  //guarda todos los buffers
   C-x k	  //Close file or buffer

   C-x i pega una archivo dentro del buffer, ej test1.txt
   M-x find-file-at-point abre el archivo debajo del cursor (escrito en el text)

** Buffers
   C-x b	  //Switch Buffers
   C-x C-b	  //Get a List of Buffers
   C-x o	  //Switch to Other Window
   C-x 1	  //Close Other Window
   C-x 2	  //Split the Screen Horizontally
   C-x 3          //Split vertical
   C-x 0          //quita la vision actual
   C-x +          #balance windows
   
*** Customizacion
   C-x <up>        //shrink-window
   C-x <down>      //enlarge-window
   C-x <left>      //shrink-window-horizontally
   C-x <right>     //enlarge-window-horizontally

** Edicion de Texto
   C-space	   //hace la primera marca para seleccionar texto
   C-x C-x cambia el punto por la marca
   M-w	           //copia texto sin borrar original
   C-w	           //copia texto borra original
   C-k             //corta hasta el final de linea
   M-0 C-k         //corta hasta el principio de la linea
   C-u -5 C-k      //corta 5 lineas previas
   M-k	           //borra hasta el final del parrafo (queda en kill ring)
   M-d             //borra hasta el final de la palabra
   M-DEL           //borra hasta el principio de la palabra
   C-y 	           //pega texto copiado, incluso desde otras ventanas
    M-y            justo despues cicla entre los posibles yanks
   C-u 1 C-y pega uno anterior del kill-ring
   C-u C-y         //pega el kill-ring pero deja el punto al comienzo
   M-\             //borra todos los espacios
   M-SPC           //borra todos los espacios menos uno
                   ;; cycle through amounts of spacing
                   (global-set-key (kbd "M-SPC") 'cycle-spacing)

   C-l reposiciona el cursor en la pantalla
   C-u C-SPC salta a una marca anterior
       si estoy editando y salto al principio M-< luego vuelvo al punto anterior con C-u C-SPC

*** Repeticiones
    C-x z repite el ultimo comando
        z luego multiples z siguen repitiendo el comando

    C-u C-n adelanta 4 lineas C-u por default repite 4
    C-u 10 C-n adelanta 10 lineas

*** Undo
   C-x u	    //deshacer (undo)
   C-_ 	            //(redo)

** Movimientos del Cursor
   C-n	      //next line
   C-p	      //previus line
   C-a	      //principio de linea
   C-e	      //fin de linea
   M-f	      //avanzar una palabra
   M-b	      //retroceder una palabra
   M-e	      //avanza una sentencia entera
   M-a	      //retrocede una sentencia entera
   C-up/down  //avanza o retrocede un parrafo entero

   con M-x superword-mode M-f o M-b no frenan en el modo snake
    snakeMode
    snake-mode
    snake_mode    //M-f frena cursor al final en todos estos casos

** Movimientos de pagina
   C-v	          //avanza una pagina
   M-v	          //retrocede una pagina
   M->	          //final del documento
   M-<	          //principio del documento
   C-u C-space    //SALTO ATRAS (ultimo salto)
    overrided no se por quien ahora agrega un TAB (4 espacios)

** Movimientos por expresiones
   C-M-f          //proximo cierre de expresion { [ "
   C-M-b          //cierre anterior de expresion } ] "
   C-M-d          //se mueve al proximo grupo de expresiones
   C-M-u          //se mueve al grupo anterior de expresiones

   C-M-f forward-sexp adelanta en una expresion balanceada
   C-M-<left>
   C-M-b backward-sexp
   C-M-<right>
   C-M-k kill balanced expression
   C-M-SPC mark-sexp

** Indentation
   C-a M-f
   M-m
   Tab		//indent line
   C-M-\	//indent selection

** Bookmarts register
   C-x r space	//pone un bookmark
   C-x j 	//salta entre bookmarks
   C-x r m	//poner nombre al bookmark
   C-x r b	//saltar al nombre de bookmark
   C-x r l	//listar bookmarks

** TAGS
   M-,
   M-.
   M-*			//jump back
   M-x tags-apropos    	//wildcard search

** GOTO Line
   M-g g    //saltar a linea particular
   M-x goto-line   ...  2
   M-x linum-mode       muestra numero de lineas a la izq

** Tamanios de Letras
   C-x C-+ agranda el tamanio de la letra
   C-x C-- achica el tamanio de la letra

** Conocer KeyBindings y Ayudas varias
   - M-x describe-bindings (muestra todas las combinaciones activas en el buffer)
   - M-x describe-key (poner la combinacion a averiguar)
   - C-h b bindings in the buffer
   - C-h m bindings in the modes
   - C-h w command-name  //bindings for a command
   - C-h k key-sequence  //commands for this sequence
   - C-h f function-name //si lo hago sobre el nombre lo busca por defecto
   - C-h v variable-name //si lo hago sobre el nombre lo busca por defecto
   - C-h f variable-name

** Running SHELL Commands & bash-commands
   M-x eshell  //ejecuta shell de emacs permite movimientos entre comandos
   M-x shell   //ejecuta un shell muy chico, envia linea completa NO permite movimeintos entre comandos
   M-x term    //ejecuta shell /bin/bash completo (no funciona en windows)
   C-c C-c     //para terminar el programa del shell o eshell
   
   M-! //ejecuta un comando bash desde el minibuffer; si termina en & lo hace asincronico
        (setq shell-file-name "bash")
        (setq shell-command-switch "-ic")
        tuve que agregar estos switches para que lea lista de aliases, me tira un error pero ejecuta

   
** Modos de edicion - Major Modes
   C-h m	     	 //lista todos los modos

** Customizaciones
~/.emacs	    //lee el la lista de customizaciones antes de arrancar

*** para customizar colores, fondo highlight
    M-x customize
    (menu-bar-mode -1)	//quita el menu en X
    (tool-bar-mode -1)	//quita los iconos en X
    (scroll-bar-mode -1)	//quita la barra lateral

*** numeros de linea
    M-x linum-mode	 	//activa los nuemeros de linea en el buffer
    M-x global-linum-mode	//activa los numeros de linea en todos los buffers
    (global-linum-mode 1)	//poner en .emacs para activar antes de entrar

*** para probar customizaciones del archivo u otro archivo, seleccionar el texto y
    M-x eval-region		     //solo parte seleccionada
    M-x eval-buffer		     //evalua todo el buffer
    C-M-x 			     //evalua solo la linea OJO no funciona
    C-x C-e    //luego de una sentencia cierre de ()evalua

*** Auto-Indent
    C-j	//activa el modo
    (define-key global-map (kbd "RET") 'newline-and-indent)	//global en .emacs


** Line endings and escape characters
   http://ergoemacs.org/emacs/emacs_line_ending_char.html
   C-q C-j pone ^J (line feed '\n')
   C-q C-m pone ^M (carriage return '\r')
   C-q C-i pone ^I (tab '\t')

** DOS buffers
   - para convertir un buffer en modo DOS a unix utf-8-unix
     M-x set-buffer-file-coding-system
   - para ver los finales de linea DOS sin convertirlos
     M-x revert-buffer-coding-system

** Ver el kill-ring
   C-h v kill-ring


** BOOKMARKS, Registers & Rectangles
*** Bookmarks
   C-x r m marca el bookmark
   C-x r b salta al bookmark TAB muestra la lista
   C-x r l lista bookmarks

*** Registers
   M-x view-register RET r  muestra el contenidode el registro r
   C-x r s name  Copy region into register name (copy-to-register) 
   C-x r i name  Insert text from register name (insert-register)

   -Register as a Bookmark
   C-x r <SPC> r  Record the position of point and the current buffer in register r (point-to-register). 
   C-x r j r  Jump to the position and buffer saved in register r (jump-to-register).

   - Guardar configuracion de windows y buffers
   C-x r w <num>    guardar configuracion
   C-x r j <num>    saltar a configuracion guardada

*** Rectangles
    El rectangulo se selecciona con el punto y la marca, todos los comandos de rectangulo empiezan C-x r
    C-x r k kill-rectangle, lo guarda para usar despues
    C-x r d delete-rectangle, lo borra no lo guarda
    C-x r c clear-rectangle, borra lo interior y deja los espacios libres
    C-x r o open-rectangle, corre todo el texto a la derecha del rectangulo agregando espacios
    C-x r y yank-rectangle, agrega un rectangulo del kill-ring desplazando todo a la derecha
   
** COMMENTS
   M-; comenta al final de una linea o si es hay bloque marcado multiples lineas
   C-/ con una funcion propia en .emacs comenta linea o multiples lineas
   
** SEARCH
   C-s busca hacia adelante, salta con multiples C-s
   C-r busca hacia atras
   C-s C-w busca hacia adelante lo marcado por el punto, para incluir mas expresiones C-w
   C-s M-p busca entradas anteriores M-n y posteriores

   M-s .	Command: isearch-forward-symbol-at-point
                Feed the symbol at point to C-s
                perform search
   M-s o	Command: occur
                Run occur
   M-s h .	Command: highlight-symbol-at-point
                Highlight the symbol at point
   M-s h l	Command: highlight-lines-matching-regexp
                Highlight lines that match input regexp
   M-s h r	Command: highlight-regexp
                Highlight according to regexp
   M-s h u	Command: unhighlight-regexp
                Turn off highlighting strings that match
                regexp.

   M-% find and replace


* #### USO DE EMACS # OTRO MAS ####### 
** SEARCH occur
   M-x occur RET exp RET lists in a new buffer all the occurrences of the exp in the current buffer

** SEARCH IMenu
   M-x imenu	//saltar entre funciones del buffer
       TAB muestra en otro buffer las posibles opciones
       si elijo una por ejemplo m salta directo a main
       
       en python primero debo elegir la clase y luego va a la funcion

       Cuando agrego una funcion necesita hacer un rescan elegir *Rescan*

** Shell ansi-term y term
   M-x ansi-term o M-x term
   son muy parecidos, ambos tienen funcionalidad bash completa (o casi)
   C-c funciona como C-x localmente
   C-c C-j para pasar del modo comandos (char) al modo edicion (line)
   C-c C-x para pasar del modo edicion (line) al modo comandos (char)
   C-c C-c envia un final de trabajo a la terminal -> C-c
   C-c k para salir

** Modo Terminal enlaces serie
   M-x serial-term 
   C-c C-j modo edicion de linea
   C-c C-k modo edicion char
   C-c C-c envia un final de trabajo a la terminal -> C-c
   C-x k para salir


** #### FILE MANAGER WITH DIRED ####
*** formas de arrancarlo
   M-x dired

   g renueva lista

   o abrir en otra ventana
   C-o abrir en otra ventana pero no ir a la ventana
   ( listar menos informacion en el directorio

   f, e, RET open file at pointer

   C copiar archivo
   D borrar archivo
   + crear nuevo directorio 'mkdir'

   d marca el archivo para borrarlo
   u desmarca archivos
   x ejecuta el borrado

*** Otras formas de arrancarlo
   C-x d arranca Dired en el directorio seleccionado
   C-x 4 d arranca Dired en el directorio seleccionado en otra ventana
   C-x C-f selecciona directorio para entrar con Dired

   q termina Dired
   
   n move below
   p move above
   C-s buscar con I-search
   
   #### END DIRED ####

** #### FILE MANAGER WITH LIST-BUFFER IBUFFER ####
   - Con C-x C-b aparece el ibuffer con todos los buffers que se estan usando
      incluso los que utiliza dired (mas arriba)
   - En la lista puedo buscar, ENT para elegir alguno
   - d para marcar los buffers para kill, x ejecuta
   - k marca los buffers pero no hace kill, solo los saca de la lista
   - g igual que con dired actualiza la lista
   - m mark buffers
   - u unmark buffers
   - S save marked buffers
   - D deleted marked buffers
   - M-x describe-mode me muestra todas las opciones que tengo en el modo
   - (defalias 'list-buffers ibuffer)    ;make ibuffer default

** #### IDO-MODE ####
   en .emacs
      (require 'ido)
      (ido-mode t)

   //cuando trae problemas, como para crear archivo nuevo,
   C-j crea archivo con el nombre elegido (no el recomendado)
   C-f toggle del modo find-file (without-ido-mode)
   #### END IDO-MODE ####

** #### EDIFF ####
   muestra diff visual entre dos archivos, luego hay que utilizar winner-mode
*** Comandos de arranque
    - M-x ediff
      M-x ediff-files
      compara dos archivos, el primero por default el actual

    - M-x ediff-buffer
      compare two open buffers

    - M-x ediff-current-file
      compara el buffer actual con la info del disco, se puede usar con M-x revert-buffer

    - M-x ediff-directories
      compara la estructura de dos directorios

    - M-x ediff-backup
      compara el buffer actual con el algun backup

*** Comandos de sesion
   - | los acomoda uno al lado del otro 
   - n y p next - previous difference
   - a completa con el bloque del archivo a
   - b completa con el bloque del archivo b
   - wa graba archivo a
   - wb graba archivo b
   - q sale
   - ? help toggle




** #### MULTIPLE CURSORS ####
   https://github.com/magnars/multiple-cursors.el

   M-x mc/...
   ej. pinto o marco un area (palabra)
   M-x mc/mark-more-like-this-extend  y voy marcando con las flechas
   C-g deja de marcar y pasa a cursores que puedo usar todos juntos!
   //hice un override de kbd, ahora pintar letra o palabra
   C-}
   #### END MULTIPLE CURSORS ####
   
** ### Funcionalidad de paquetes
   #listar paquetes desde ELPA (por defecto)
   M-x list-packages      //'i' para marcar 'u' desmarcar 'x' hacer install
   
   #mas cantidad de repositorios, colocar esto en .emacs
   (require 'package)
   (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
   
   #cuando voy a activar los paquetes
   (package-initialize)

   #list of installed .emacs.d/elpa/*
   better-defaults
   material-theme

   - ahora uso melpa-stable, si quiero buscar en otro descomento melpa por ejemplo
     C-x C-e para evaluar y M-x list-packages, si no aparece el repositorio
     M-x packages-refresh-content y debiera ver lo nuevo

** Editar buffer en otro modo
   - por ejemplo editar en modo c archivos de arduino que son .ino
     M-x c-mode

** #### FUNCIONALIDADES CC-MODE (major mode) ####
*** Indentation
    TAB en un renglon o region
    C-M-q (c-indent-exp) //Indents an entire balanced brace or parenthesis expression
    C-c C-q (c-indent-defun) //Indents the entire top-level function

    C-M-h (c-mark-function)

*** Comments (overrided)
    C-/  linea o region seleccionada comenta en c++ "//"
    M-x comment-box, seleccionar un region y ejecutar el comando


*** Movements Command
    C-M-a (c-beginning-of-defun)
    C-M-e (c-end-of-defun)

    M-a (c-beginning-of-statement)
    M-e (c-end-of-statement)

    C-c C-u (c-up-conditional)
        M-x c-up-conditional-with-else
        M-x c-down-conditional
        M-x c-down-conditional-with-else
    C-c C-p (c-backward-conditional)
    C-c C-n (c-forward-conditional)
        M-x c-backward-into-nomenclature
        M-x c-forward-into-nomenclature
    C-a overrided comienzo de linea o texto
    C-backspace hungry delete backwards (borra word anteriro y todos los espacios)
    C-delete hungry delete forwards (borra word posterior y todos los espacios)

*** Styles
    C-c . style-name <RET>

*** HideIfDef minor-mode
    M-x hide-ifdef-mode
    M-x hide-ifdefs         (oculta las definiciones que no son validas)

    C-c @           Prefix Command
    C-c @ C-d       hide-ifdef-block
    C-c @ C-q       hide-ifdef-toggle-read-only
    C-c @ C-s       show-ifdef-block
    C-c @ C-w       hide-ifdef-toggle-shadowing
    C-c @ D         hide-ifdef-set-define-alist
    C-c @ U         hide-ifdef-use-define-alist
    C-c @ d         hide-ifdef-define
    C-c @ h         hide-ifdefs
    C-c @ s         show-ifdefs
    C-c @ u         hide-ifdef-undef
**** Me funciona solo en el archivo actual y si las definiciones estan en .h las oculta igual

** #### FUNCIONALIDAD EN PYTHON-MODE ####
*** Movimientos
    C-M-a me adelanta una funcion
    C-M-e atrasa una funcion
    C-M-n adelanta una expresion balanceada ([{
    C-M-p me atrasa una expresion balanceada }])
    //C-M-f me adelanta un condicional if: elif: else:
    //C-M-b me atrasa un condicional 
    M-a me adelanta un condicional if: elif: else:
    M-e me atrasa un condicional if: elif: else:

    con M-x superword-mode M-f o M-b no frenan en el modo snake
     snakeMode
     snake-mode
     snake_mode    //M-f frena cursor al final en todos estos casos

*** Seleccion
    C-M-SPC selecciona todo el bloque de la expresion (el punto en la primera letra de la exp)
    C-M-k borra toda la expresion (el punto en la primera letra de la exp)

*** Imenu
    M-x imenu
    con TAB me da las opciones, si la funcioesta dentro de la clase primero debo
    elegir la clase, despues lista las funciones

** #### ACE Jump MODE ####
   C-c SPC elijo la letra del comienzo de una palabra

** #### USO GNU Global, funciona muy bien en linea de comandos!!! ####
   M-x ggtags-mode activa el modo o lo desactiva
   M-x ggtags-create-tags si el directorio-proyecto no tiene GTAGS
   M-x ggtags- TAB funciones disponibles
   M-x ggtags-find-file nombre.c busca y abre el archivo dentro del proyecto
   si en cualquier busqueda hay varios archivos/definiciones/declaraciones M-n M-p me mueve dentro de esas
   
   M-. salta entre definiciones y declaraciones
   M-* vuelve atras los saltos
   M-, vuelve atras los saltos para emacs 25

** #### SUBLIMITY MODE ####
   M-x sublimity-mode
    agrega minimap

** #### TRAMP en Emacs
   (setq tramp-default-method "ssh")
   C-x C-f /pi@192.168.1.34: RET

*** Multiple Hops
    With the new syntax, each 'hop' is separated by |. The example in the manual is:
    C-x C-f /ssh:bird@bastion|ssh:you@remotehost:/path RET
    Which connects firstly as bird@bastion, and from there to you@remotehost:/path

*** /su: or /sudo: on remote HOSTS
    You can also use this syntax to sudo/su to root (or of course any other user) on a remote host:
    C-x C-f /ssh:you@remotehost|sudo:remotehost:/path/to/file RET

*** root on multiple hops
    C-x C-f /ssh:smith16|sudo:root@smith16:/etc/

** #### WEB Browsing con eww
*** Para abrir un archivo local M-x eww-open-file
*** Para navegar dentro de emacs
    - M-x eww
    - Abrir otra ventana M-x eww (de nuevo)
    - M-x eww-open-file     para abrir archivo local HTML
    - q cierra el browser
    - l back-url
    - TAB next link

    - n next-url

    key             binding
    ---             -------
    
    TAB             shr-next-link
    ESC             Prefix Command
    SPC             scroll-up-command
    &               eww-browse-with-external-browser
    -               negative-argument
    0 .. 9          digit-argument
    <               beginning-of-buffer
    >               end-of-buffer
    ?               describe-mode
    B               eww-list-bookmarks
    C               url-cookie-list
    D               eww-toggle-paragraph-direction
    E               eww-set-character-encoding
    F               eww-toggle-fonts
    G               eww
    H               eww-list-histories
    R               eww-readable
    S               eww-list-buffers
    b               eww-add-bookmark
    d               eww-download
    g               eww-reload
    h               describe-mode
    l               eww-back-url
    n               eww-next-url
    p               eww-previous-url
    q               quit-window
    r               eww-forward-url
    t               eww-top-url
    u               eww-up-url
    v               eww-view-source
    w               eww-copy-page-url
    DEL             scroll-down-command
    S-SPC           scroll-down-command
    <backtab>       shr-previous-link
    <delete>        scroll-down-command
    <remap>         Prefix Command
    
    C-M-i           shr-previous-link
    M-n             eww-next-bookmark
    M-p             eww-previous-bookmark


** DOCS
*** docs gnu-global
    https://www.gnu.org/software/global/globaldoc_toc.html
    https://github.com/leoliu/ggtags
    #ver despues para python con pygments
    #bajo paquete ggtags de melpa-stable

*** Herramientas C/C++ CEDET - Irony - Rtags
    https://tuhdo.github.io/c-ide.html
    http://www.seas.upenn.edu/~chaoliu/2017/09/01/c-cpp-programming-in-emacs/
    http://alexott.net/en/writings/emacs-devenv/EmacsCedet.html

*** docs generales
    http://www.masteringemacs.org
    http://ergoemacs.org/emacs/effective_emacs.html
    https://www.emacswiki.org/emacs/IndentingC
    http://pragmaticemacs.com/emacs/multiple-cursors/
    https://sites.google.com/site/steveyegge2/effective-emacs
    http://irreal.org/blog/
    https://emacs-fu.blogspot.com/
    https://www.gnu.org/software/emacs/manual/
    https://www.gnu.org/software/emacs/manual/html_mono/ccmode.html



* EMACS on console
** alias emacsc 'emacs -nw'
** mas colores
   - echo $TERM
     export TERM=xterm-256color

   - o lanzar emacs sin modificar default de la consola
     TERM=xterm-256color emacs -nw

** color-theme
   - M-x customize-theme
   - M-x load-theme    #muestra lista de posibilidades

